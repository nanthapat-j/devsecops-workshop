# DevSecOps Workshop - Thai Market Ready
# Project configuration and package information

[project]
name = "devsecops-workshop"
version = "1.0.0"
description = "Comprehensive DevSecOps workshop tailored for Thai market - Senior Cloud Engineer to DevSecOps Expert"
authors = [
    {name = "Nanthapat J", email = "nanthapat.j@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"

keywords = [
    "devsecops",
    "security",
    "kubernetes",
    "terraform",
    "aws",
    "thailand",
    "thai-market",
    "compliance",
    "pdpa",
    "automation"
]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Systems Administration"
]

dependencies = [
    "boto3>=1.26.0",
    "kubernetes>=24.2.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    "click>=8.1.0",
    "rich>=12.0.0",
    "jinja2>=3.1.0",
    "cryptography>=38.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "pre-commit>=2.20.0"
]
security = [
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "semgrep>=1.0.0"
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.5.0",
    "mkdocs-mermaid2-plugin>=0.6.0"
]

[project.urls]
Homepage = "https://github.com/nanthapat-j/devsecops-workshop"
Documentation = "https://github.com/nanthapat-j/devsecops-workshop/tree/main/docs"
Repository = "https://github.com/nanthapat-j/devsecops-workshop"
Issues = "https://github.com/nanthapat-j/devsecops-workshop/issues"

[project.scripts]
devsecops-workshop = "scripts.cli:main"

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/_version.py"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.safety]
ignore = []